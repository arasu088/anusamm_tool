<%= form_with(model: abstract_quantity) do |form| %>
  <% if abstract_quantity.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(abstract_quantity.errors.count, "error") %> prohibited this abstract_quantity from being saved:</h2>

      <ul>
        <% abstract_quantity.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :project_id %>
    <%= form.collection_select :project_id, Project.where("is_active=1").order(:name),:id,:name, include_blank: true,:required=>true %>
  </div>

  <div class="field">
    <%= form.label :material_id %>
    <%= form.collection_select :material_id, Material.select("materials.id,mt.name || '---' || materials.name  as name").joins("inner join material_types mt on materials.material_type_id=mt.id").where("materials.is_active=1").order("mt.name,materials.name"),:id,:name, include_blank: true,:required=>true %>
  </div>

  <div class="field">
    <%= form.label :quantity %>
    <%= form.text_field :quantity,:required=>true, onkeyup: 'calculate_total()' %>
  </div>

  <div class="field">
    <%= form.label :amount %>
    <%= form.text_field :amount,:required=>true, onkeyup: 'calculate_total()' %>
  </div>

  <div class="field">
  <%= form.label :gst %>
  <%= form.text_field :gst, onkeyup: 'calculate_total()' %>
</div>

  <div class="field">
    <%= form.label :total %>
    <%= form.text_field :total,:readonly=>true %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<script>
function calculate_total() {
var q = parseFloat(jQuery("#abstract_quantity_quantity").val())
if(isNaN(q)) {
 q = 0;
}
var amt = parseFloat(jQuery("#abstract_quantity_amount").val())
if(isNaN(amt)) {
 amt = 0;
}
var gst = parseFloat(jQuery("#abstract_quantity_gst").val())
if(isNaN(gst)) {
  gst = 0;
}
total=((q*amt)+((q*amt)*(gst/100))).toFixed(1)
jQuery("#abstract_quantity_total").val(total)
}
</script>